{"version":3,"sources":["components/PeriodCard.jsx","components/ProfileCard.jsx","App.jsx","index.jsx"],"names":["PeriodCard","title","timeframes","current","previous","className","toLowerCase","replace","src","alt","ProfileCard","period","setPeriod","type","name","id","value","checked","onChange","target","htmlFor","App","useState","data","map","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uNA8BeA,MA3Bf,YAAmE,IAA7CC,EAA4C,EAA5CA,MAA4C,IAArCC,WAAcC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,SAGlD,OACE,yBAASC,UAAS,sBAHC,eAAcJ,EAAMK,cAAcC,QAAQ,IAAK,OAGlE,SACE,sBAAKF,UAAU,iBAAf,UACE,sBAAKA,UAAU,uBAAf,UACE,oBAAIA,UAAU,eAAd,SAA8BJ,IAC9B,qBAAKI,UAAU,WAAWG,IAAI,2BAA2BC,IAAI,gBAE/D,sBAAKJ,UAAU,uBAAf,UACE,sBAAMA,UAAU,eAAhB,mBAAmCF,EAAnC,SACA,sBAAME,UAAU,gBAAhB,+BAAgDD,EAAhD,kBC0CKM,MAtDf,YAA6C,IAAtBC,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,UAC7B,OACE,0BAASP,UAAU,eAAnB,UACE,sBAAKA,UAAU,iBAAf,UACE,qBAAKA,UAAU,eAAeG,IAAI,0BAA0BC,IAAI,WAChE,sBAAKJ,UAAU,eAAf,UACE,sBAAMA,UAAU,SAAhB,wBACA,qDAGJ,sBAAKA,UAAU,kBAAf,UACE,gCACE,uBACEQ,KAAK,QACLC,KAAK,SACLC,GAAG,QACHC,MAAM,QACNC,QAAoB,UAAXN,EACTO,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBP,EAAUO,EAAOH,UAE7C,uBAAOI,QAAQ,QAAf,sBAEF,gCACE,uBACEP,KAAK,QACLC,KAAK,SACLC,GAAG,SACHC,MAAM,SACNC,QAAoB,WAAXN,EACTO,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBP,EAAUO,EAAOH,UAE7C,uBAAOI,QAAQ,SAAf,uBAEF,gCACE,uBACEP,KAAK,QACLC,KAAK,SACLC,GAAG,UACHC,MAAM,UACNC,QAAoB,YAAXN,EACTO,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBP,EAAUO,EAAOH,UAE7C,uBAAOI,QAAQ,UAAf,+B,aCxBKC,MAff,WACE,MAA4BC,mBAAS,UAArC,mBAAOX,EAAP,KAAeC,EAAf,KAEA,OACE,sBAAMP,UAAU,MAAhB,SACE,sBAAKA,UAAU,YAAf,UACE,cAAC,EAAD,CAAaM,OAAQA,EAAQC,UAAWA,IACvCW,EAAKC,KAAI,gBAAGvB,EAAH,EAAGA,MAAOC,EAAV,EAAUA,WAAV,OACR,cAAC,EAAD,CAAwBD,MAAOA,EAAOC,WAAYA,EAAWS,IAA5CV,YCV3BwB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.3639637a.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction PeriodCard({ title, timeframes: { current, previous } }) {\n  const getIconClass = () => `card-${title.toLowerCase().replace(' ', '-')}`;\n\n  return (\n    <section className={ `period-card ${getIconClass()}` }>\n      <div className=\"period-content\">\n        <div className=\"period-sub-container\">\n          <h2 className=\"period-title\">{title}</h2>\n          <img className=\"ellipsis\" src=\"images/icon-ellipsis.svg\" alt=\"Ellipsis\" />\n        </div>\n        <div className=\"period-sub-container\">\n          <span className=\"time-current\">{`${current}hrs`}</span>\n          <span className=\"time-previous\">{`Last Week - ${previous}hrs`}</span>\n        </div>\n      </div>\n    </section>\n  );\n}\n\nPeriodCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  timeframes: PropTypes.shape({\n    current: PropTypes.number,\n    previous: PropTypes.number,\n  }).isRequired,\n};\n\nexport default PeriodCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction ProfileCard({ period, setPeriod }) {\n  return (\n    <section className=\"profile-card\">\n      <div className=\"profile-header\">\n        <img className=\"profile-icon\" src=\"images/image-jeremy.png\" alt=\"Jeremy\" />\n        <div className=\"profile-name\">\n          <span className=\"report\">Report for</span>\n          <h1>Jeremy Robson</h1>\n        </div>\n      </div>\n      <div className=\"profile-periods\">\n        <div>\n          <input\n            type=\"radio\"\n            name=\"period\"\n            id=\"daily\"\n            value=\"daily\"\n            checked={period === 'daily'}\n            onChange={({ target }) => setPeriod(target.value)}\n          />\n          <label htmlFor=\"daily\">Daily</label>\n        </div>\n        <div>\n          <input\n            type=\"radio\"\n            name=\"period\"\n            id=\"weekly\"\n            value=\"weekly\"\n            checked={period === 'weekly'}\n            onChange={({ target }) => setPeriod(target.value)}\n          />\n          <label htmlFor=\"weekly\">Weekly</label>\n        </div>\n        <div>\n          <input\n            type=\"radio\"\n            name=\"period\"\n            id=\"monthly\"\n            value=\"monthly\"\n            checked={period === 'monthly'}\n            onChange={({ target }) => setPeriod(target.value)}\n          />\n          <label htmlFor=\"monthly\">Monthly</label>\n        </div>\n      </div>\n    </section>\n  );\n}\n\nProfileCard.propTypes = {\n  period: PropTypes.string.isRequired,\n  setPeriod: PropTypes.func.isRequired,\n};\n\nexport default ProfileCard;\n","import React, { useState } from 'react';\nimport PeriodCard from './components/PeriodCard';\nimport ProfileCard from './components/ProfileCard';\nimport data from './data.json';\nimport './sass/index.scss';\n\nfunction App() {\n  const [period, setPeriod] = useState('weekly');\n\n  return (\n    <main className=\"App\">\n      <div className=\"container\">\n        <ProfileCard period={period} setPeriod={setPeriod} />\n        {data.map(({ title, timeframes }) => (\n          <PeriodCard key={title} title={title} timeframes={timeframes[period]} />\n        ))}\n      </div>\n    </main>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}